<Project Sdk="Microsoft.NET.Sdk">

  <!-- === General properties ===-->
  <PropertyGroup>
    <TargetFramework>netstandard2.0</TargetFramework>
    <EnableNETAnalyzers>true</EnableNETAnalyzers>
    <RootNamespace>Salix.RestClient</RootNamespace>
    <LangVersion>latest</LangVersion>
    <NeutralLanguage>en</NeutralLanguage>
    <GenerateDocumentationFile>true</GenerateDocumentationFile>
    <DebugType>portable</DebugType>
    <Nullable>enable</Nullable>
    <NoWarn>1701;1702;IDE0160</NoWarn>
  </PropertyGroup>

  <!-- === NuGet package description properties ===-->
  <PropertyGroup Label="NuGet properties">
    <PackageId>Salix.RestClient</PackageId>
    <Authors>Anrijs Vitolins;GitHub contributors</Authors>
    <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
    <IncludeSymbols>true</IncludeSymbols>
    <SymbolPackageFormat>snupkg</SymbolPackageFormat>
    <EmbedUntrackedSources>true</EmbedUntrackedSources>
    <DebugSymbols>true</DebugSymbols>
    <PackageTags>rest;api;httpclient</PackageTags>
    <PackageLicenseExpression>MIT</PackageLicenseExpression>
    <PackageIcon>RestClient.png</PackageIcon>
    <Description>
Wrappers (abstract base classes) around IHttpClientFactory handled HttpClient instance to help interacting with external RESTful APIs.
Ability to get directly strongly typed objects (choose between Json.Net [default] and String.net serializers.
Provides extension methods for GET, POST and others to skip HttpRequest setup. Reads all parameters seemlessly from configuration object.
Provides path and query parametrization for API URLs as well as default and on-fly header value additions to calls.
    </Description>
    <PackageProjectUrl>https://github.com/salixzs/RestClient</PackageProjectUrl>
    <RepositoryUrl>https://github.com/salixzs/RestClient</RepositoryUrl>
    <PublishRepositoryUrl>true</PublishRepositoryUrl>
    <PackageReadmeFile>nuget_readme.md</PackageReadmeFile>

    <PackageReleaseNotes>
Heavy breaking changes! Considerable rewrite with plenty of improvements in code and documentation (see repository Wiki).
Made sure Abstract class works in any of 3 scenarios - Factory, Named Factory and Typed client - with/without interface.
Added oveeridable methods to read authentication token or apiKey from outside before each HttpClient request.
Added Response.ReasonPhrase to RestClientException when there is server failure for request.
Added PathParameters collection to replace dynamic and avoid collision with object data parameter.
Exposed GetRequestMessage and SendMessageAsync methods to work with them on lower level.
Added missing extension methods + and heavily documented all.
Internally package code base covered with much more unit-tests.
Package is now embracing NULLABLE reference types (C# v8+).
    </PackageReleaseNotes>
    <Version>3.1.0</Version>
    <AssemblyVersion>3.1.0.0</AssemblyVersion>
    <FileVersion>3.1.0.0</FileVersion>
  </PropertyGroup>

  <ItemGroup>
    <None Include="../../RestClient.png" Pack="true" Visible="false" PackagePath="" />
    <None Include="../../nuget_readme.md" Pack="true" Visible="false" PackagePath="" />
  </ItemGroup>
  
  <!-- === NuGet dependencies ===-->
  <ItemGroup>
    <PackageReference Include="Microsoft.CSharp" Version="4.7.0" />
    <PackageReference Include="Microsoft.Extensions.Http" Version="3.1.22" />
    <PackageReference Include="Microsoft.Extensions.Logging.Abstractions" Version="3.1.22" />
    <PackageReference Include="Newtonsoft.Json" Version="13.0.1" />
    <PackageReference Include="System.Text.Json" Version="6.0.2" />
  </ItemGroup>

</Project>
